#!/usr/bin/env node

var _ = require("lodash");
var crypto = require("crypto");
var fs = require("fs");
var gpml2pvjson = require("../lib/GPML2013aToPVJSON").GPML2013aToPVJSON;
var hl = require("highland");
var npmPackage = JSON.parse(
  fs.readFileSync("./package.json", { encoding: "utf8" })
);
var ndjson = require("ndjson");
var program = require("commander");
var VError = require("verror");

program
  .version(npmPackage.version)
  .description("Converts GPML (XML) to pvjson (JSON)")
  .option(
    "--id [string]",
    'Specify unique ID of this pathway, e.g., "http://identifiers.org/wikipathways/WP4"'
  );

program.on("--help", function() {
  console.log("  Examples:");
  console.log();
  console.log("    Display pvjson in command line:");
  console.log(
    `    $ gpml2pvjson --id http://identifiers.org/wikipathways/WP554 < ./test/input/WP554_77712.gpml`
  );

  console.log("    Save pvjson to new file:");
  console.log(
    "    $ gpml2pvjson < ./test/input/WP554_77712.gpml > ./WP554_77712.json"
  );

  console.log("    Download from WikiPathways and convert:");
  console.log(
    `    $ curl "http://webservice.wikipathways.org/getPathwayAs?fileType=xml&pwId=WP554&revision=77712&format=xml" | xpath "*/ns1:data/text()" | base64 --decode | gpml2pvjson --id http://identifiers.org/wikipathways/WP554`
  );

  console.log("    Get w/ WikiPathways API and convert:");
  console.log(
    `    $ wikipathways-api-client get-pathway WP4 | gpml2pvjson --id http://identifiers.org/wikipathways/WP4`
  );
});

program.parse(process.argv);

var id = program.id;
// NOTE If an id is not provided, the CLI generates a hash of the input to use as the id. See
// https://bentrask.com/?q=hash://sha256/98493caa8b37eaa26343bbf73f232597a3ccda20498563327a4c3713821df892
// This is for the CLI only; the library itself does not do this.
var HASH_NAME = "sha256";

// NOTE: some GPML files use lowercase "utf-8", so we need the ignore case flag to be set.
var gpmlSeparator = /<\?xml version="1.0" encoding="UTF-8"\?>/i;

// TODO this works if the XML file has the XML header. Should we handle it when it doesn't?
//var source = hl(process.stdin).splitBy(gpmlSeparator).intersperse(gpmlSeparator);
var source = hl(process.stdin).splitBy(gpmlSeparator).drop(1);
/*
var source = id
  ? process.stdin
  : hl(process.stdin).doto(function(chunk) {
      hash.update(chunk);
    });
//*/

hl(source).map(gpml => hl([gpml])).each(function(gpmlStream) {
  const hash = crypto.createHash(HASH_NAME);
  hash.setEncoding("hex");

  gpmlStream.observe().doto(chunk => hash.update(chunk.toString()));

  gpml2pvjson(gpmlStream, id)
    .last()
    .map(function(pvjson) {
      if (!pvjson.pathway.id) {
        pvjson.pathway.id = `hash://${HASH_NAME}/${hash.digest("hex")}`;
      }
      return pvjson;
    })
    .errors(function(err) {
      console.error(err);
      process.exit(1);
    })
    .pipe(ndjson.serialize())
    .pipe(process.stdout);
});

// TODO does the process exit on its own?
//process.exit(0);
